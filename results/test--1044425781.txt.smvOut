*** Note that the verification tool may produce no results due to faults (in user-specified models or properties). For example, undefined subject attributes in a property may cause errors during verification process. If you cannot find any results, please check the correctness of models and properties. Besides, users should not define more than one workflow models that may introduce ambiguity of process state.*** 
*** This is NuSMV 2.4.3 (compiled on Tue May 22 14:08:54 UTC 2007)
*** For more information on NuSMV see <http://nusmv.irst.itc.it>
*** or email to <nusmv-users@irst.itc.it>.
*** Please report bugs to <nusmv@irst.itc.it>.

*** This version of NuSMV is linked to the MiniSat SAT solver. 
*** See http://www.cs.chalmers.se/Cs/Research/FormalMethods/MiniSat
*** Copyright (c) 2003-2005, Niklas Een, Niklas Sorensson 

-- specification AG ((((((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & Action = View) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & Action = View) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & Action = View) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = Add) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = Add) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = Add) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientB_OldMedicalRecords & Action = View) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 1.1 <-
  Manager = dummy
  Doctor = doctor_3
  OldMedicalRecords = PatientB_OldMedicalRecords
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientB_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 1.2 <-
-- Loop starts here
-> State: 1.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 1.3 <-
-> State: 1.3 <-
-- specification AG ((((OldMedicalRecords = PatientB_OldMedicalRecords & Action = View) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 2.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientB_OldMedicalRecords
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientB_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 2.2 <-
-- Loop starts here
-> State: 2.2 <-
  ABAC_ManagerPolicy.decision = Permit
-> Input: 2.3 <-
-> State: 2.3 <-
-- specification AG ((((OldMedicalRecords = PatientB_OldMedicalRecords & Action = View) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 3.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientB_OldMedicalRecords
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientB_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 3.2 <-
-- Loop starts here
-> State: 3.2 <-
  ABAC_ManagerPolicy.decision = Permit
-> Input: 3.3 <-
-> State: 3.3 <-
-- specification AG ((((((OldMedicalRecords = PatientB_OldMedicalRecords & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientB_OldMedicalRecords & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientB_OldMedicalRecords & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 4.1 <-
  Manager = dummy
  Doctor = doctor_3
  OldMedicalRecords = PatientC_OldMedicalRecords
  PatientPersonalInfor = PatientC_PersonalInfo
  PrivateNotes = PatientA_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 4.2 <-
-- Loop starts here
-> State: 4.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 4.3 <-
-> State: 4.3 <-
-- specification AG ((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 5.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientC_OldMedicalRecords
  PatientPersonalInfor = PatientC_PersonalInfo
  PrivateNotes = PatientA_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 5.2 <-
-- Loop starts here
-> State: 5.2 <-
  ABAC_ManagerPolicy.decision = Permit
-> Input: 5.3 <-
-> State: 5.3 <-
-- specification AG ((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 6.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientC_OldMedicalRecords
  PatientPersonalInfor = PatientC_PersonalInfo
  PrivateNotes = PatientA_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 6.2 <-
-- Loop starts here
-> State: 6.2 <-
  ABAC_ManagerPolicy.decision = Permit
-> Input: 6.3 <-
-> State: 6.3 <-
-- specification AG ((((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Action = View & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Action = View & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Action = View & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (PrivateNotes = PatientC_PrivateNotes -> AF decision = Permit) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 7.1 <-
  Manager = dummy
  Doctor = doctor_3
  OldMedicalRecords = PatientC_OldMedicalRecords
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientC_PrivateNotes
  MLSDefaultAction = write
  Action = Add
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 7.2 <-
-- Loop starts here
-> State: 7.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 7.3 <-
-> State: 7.3 <-
-- specification AG (PrivateNotes = PatientC_PrivateNotes -> AF decision = Deny) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 8.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = dummy
  PatientPersonalInfor = PatientC_PersonalInfo
  PrivateNotes = PatientC_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 8.2 <-
-- Loop starts here
-> State: 8.2 <-
  ABAC_ManagerPolicy.decision = Permit
-> Input: 8.3 <-
-> State: 8.3 <-
-- specification AG (PrivateNotes = PatientC_PrivateNotes -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 9.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientC_OldMedicalRecords
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientC_PrivateNotes
  MLSDefaultAction = write
  Action = Add
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 9.2 <-
-- Loop starts here
-> State: 9.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 9.3 <-
-> State: 9.3 <-
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 10.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientC_OldMedicalRecords
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientA_PrivateNotes
  MLSDefaultAction = write
  Action = Add
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 10.2 <-
-- Loop starts here
-> State: 10.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 10.3 <-
-> State: 10.3 <-
-- specification AG ((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 11.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientC_OldMedicalRecords
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientA_PrivateNotes
  MLSDefaultAction = write
  Action = Add
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 11.2 <-
-- Loop starts here
-> State: 11.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 11.3 <-
-> State: 11.3 <-
-- specification AG ((((((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((PrivateNotes = PatientA_PrivateNotes & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((PrivateNotes = PatientA_PrivateNotes & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((PrivateNotes = PatientA_PrivateNotes & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((Manager = manager & Action = Add) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 12.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientC_OldMedicalRecords
  PatientPersonalInfor = PatientA_PersonalInfo
  PrivateNotes = PatientC_PrivateNotes
  MLSDefaultAction = write
  Action = Add
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 12.2 <-
-- Loop starts here
-> State: 12.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 12.3 <-
-> State: 12.3 <-
-- specification AG (((Manager = manager & Action = Add) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((Manager = manager & Action = Add) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 13.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientC_OldMedicalRecords
  PatientPersonalInfor = PatientA_PersonalInfo
  PrivateNotes = PatientC_PrivateNotes
  MLSDefaultAction = write
  Action = Add
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 13.2 <-
-- Loop starts here
-> State: 13.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 13.3 <-
-> State: 13.3 <-
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientA_OldMedicalRecords & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientA_OldMedicalRecords & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientA_OldMedicalRecords & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) -> AF decision = Deny) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 14.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientA_OldMedicalRecords
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientA_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 14.2 <-
-- Loop starts here
-> State: 14.2 <-
  ABAC_ManagerPolicy.decision = Permit
-> Input: 14.3 <-
-> State: 14.3 <-
-- specification AG ((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 15.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientA_OldMedicalRecords
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientA_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 15.2 <-
-- Loop starts here
-> State: 15.2 <-
  ABAC_ManagerPolicy.decision = Permit
-> Input: 15.3 <-
-> State: 15.3 <-
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Action = View & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Action = View & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Action = View & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((OldMedicalRecords = PatientB_OldMedicalRecords & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((OldMedicalRecords = PatientB_OldMedicalRecords & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((OldMedicalRecords = PatientB_OldMedicalRecords & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((Action = View & Action = Add) & PrivateNotes = PatientB_PrivateNotes) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((Action = View & Action = Add) & PrivateNotes = PatientB_PrivateNotes) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((Action = View & Action = Add) & PrivateNotes = PatientB_PrivateNotes) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((Action = Add & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((Action = Add & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((Action = Add & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = View) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 16.1 <-
  Manager = dummy
  Doctor = doctor_3
  OldMedicalRecords = PatientA_OldMedicalRecords
  PatientPersonalInfor = PatientC_PersonalInfo
  PrivateNotes = PatientC_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 16.2 <-
-- Loop starts here
-> State: 16.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 16.3 <-
-> State: 16.3 <-
-- specification AG ((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = View) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 17.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientA_OldMedicalRecords
  PatientPersonalInfor = PatientC_PersonalInfo
  PrivateNotes = PatientC_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 17.2 <-
-- Loop starts here
-> State: 17.2 <-
  ABAC_ManagerPolicy.decision = Permit
-> Input: 17.3 <-
-> State: 17.3 <-
-- specification AG ((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = View) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 18.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientA_OldMedicalRecords
  PatientPersonalInfor = PatientC_PersonalInfo
  PrivateNotes = PatientC_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 18.2 <-
-- Loop starts here
-> State: 18.2 <-
  ABAC_ManagerPolicy.decision = Permit
-> Input: 18.3 <-
-> State: 18.3 <-
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientB_OldMedicalRecords & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientB_OldMedicalRecords & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientB_OldMedicalRecords & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((Manager = manager & Action = View) & PrivateNotes = PatientB_PrivateNotes) -> AF decision = Permit) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 19.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = dummy
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientB_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 19.2 <-
-- Loop starts here
-> State: 19.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 19.3 <-
-> State: 19.3 <-
-- specification AG (((Manager = manager & Action = View) & PrivateNotes = PatientB_PrivateNotes) -> AF decision = Deny) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 20.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientB_OldMedicalRecords
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientB_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 20.2 <-
-- Loop starts here
-> State: 20.2 <-
  ABAC_ManagerPolicy.decision = Permit
-> Input: 20.3 <-
-> State: 20.3 <-
-- specification AG (((Manager = manager & Action = View) & PrivateNotes = PatientB_PrivateNotes) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 21.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientC_OldMedicalRecords
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientB_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 21.2 <-
-- Loop starts here
-> State: 21.2 <-
  ABAC_ManagerPolicy.decision = Permit
-> Input: 21.3 <-
-> State: 21.3 <-
-- specification AG (((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Action = View & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Action = View & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Action = View & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 22.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientC_OldMedicalRecords
  PatientPersonalInfor = PatientC_PersonalInfo
  PrivateNotes = PatientA_PrivateNotes
  MLSDefaultAction = write
  Action = Add
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 22.2 <-
-- Loop starts here
-> State: 22.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 22.3 <-
-> State: 22.3 <-
-- specification AG ((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 23.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientC_OldMedicalRecords
  PatientPersonalInfor = PatientC_PersonalInfo
  PrivateNotes = PatientA_PrivateNotes
  MLSDefaultAction = write
  Action = View
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 23.2 <-
-- Loop starts here
-> State: 23.2 <-
  ABAC_ManagerPolicy.decision = Permit
-> Input: 23.3 <-
-> State: 23.3 <-
-- specification AG ((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 24.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientC_OldMedicalRecords
  PatientPersonalInfor = PatientC_PersonalInfo
  PrivateNotes = PatientA_PrivateNotes
  MLSDefaultAction = write
  Action = Add
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 24.2 <-
-- Loop starts here
-> State: 24.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 24.3 <-
-> State: 24.3 <-
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientC_OldMedicalRecords & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientC_OldMedicalRecords & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientC_OldMedicalRecords & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = View) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = View) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = View) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientB_OldMedicalRecords & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientB_OldMedicalRecords & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientB_OldMedicalRecords & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 25.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientA_OldMedicalRecords
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientB_PrivateNotes
  MLSDefaultAction = write
  Action = Add
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 25.2 <-
-- Loop starts here
-> State: 25.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 25.3 <-
-> State: 25.3 <-
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 26.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientA_OldMedicalRecords
  PatientPersonalInfor = PatientB_PersonalInfo
  PrivateNotes = PatientB_PrivateNotes
  MLSDefaultAction = write
  Action = Add
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 26.2 <-
-- Loop starts here
-> State: 26.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 26.3 <-
-> State: 26.3 <-
-- specification AG (((OldMedicalRecords = PatientC_OldMedicalRecords & Action = View) & Action = Add) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((OldMedicalRecords = PatientC_OldMedicalRecords & Action = View) & Action = Add) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((OldMedicalRecords = PatientC_OldMedicalRecords & Action = View) & Action = Add) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & Action = View) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = View) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = View) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientC_OldMedicalRecords & Action = View) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((Manager = manager & OldMedicalRecords = PatientA_OldMedicalRecords) & OldMedicalRecords = PatientB_OldMedicalRecords) & Action = View) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 27.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientA_OldMedicalRecords
  PatientPersonalInfor = PatientC_PersonalInfo
  PrivateNotes = PatientC_PrivateNotes
  MLSDefaultAction = write
  Action = Add
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 27.2 <-
-- Loop starts here
-> State: 27.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 27.3 <-
-> State: 27.3 <-
-- specification AG ((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((OldMedicalRecords = PatientA_OldMedicalRecords & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 28.1 <-
  Manager = manager
  Doctor = doctor_3
  OldMedicalRecords = PatientA_OldMedicalRecords
  PatientPersonalInfor = PatientC_PersonalInfo
  PrivateNotes = PatientC_PrivateNotes
  MLSDefaultAction = write
  Action = Add
  Process_State = 10
  ABAC_ManagerPolicy.decision = Pending
-> Input: 28.2 <-
-- Loop starts here
-> State: 28.2 <-
  ABAC_ManagerPolicy.decision = Deny
-> Input: 28.3 <-
-> State: 28.3 <-
-- specification AG (((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((OldMedicalRecords = PatientB_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientC_PrivateNotes) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG (((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientB_OldMedicalRecords) & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientC_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((OldMedicalRecords = PatientA_OldMedicalRecords & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = View) & PrivateNotes = PatientA_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) & PatientPersonalInfor = PatientB_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Permit) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Deny) IN ABAC_ManagerPolicy is true
-- specification AG ((((((Manager = manager & OldMedicalRecords = PatientC_OldMedicalRecords) & Action = Add) & PrivateNotes = PatientA_PrivateNotes) & PrivateNotes = PatientB_PrivateNotes) & PatientPersonalInfor = PatientA_PersonalInfo) -> AF decision = Non-applicable) IN ABAC_ManagerPolicy is true
*** end of NuSMV verification 
